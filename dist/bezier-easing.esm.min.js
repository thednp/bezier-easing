// CubicBezier Easing v1.0.1 | thednp Â© 2022 | MIT-License
class t{constructor(t,e,s,i,r){const h=t||0,a=e||0,u=s||1,c=i||1;this.cx=3*h,this.bx=3*(u-h)-this.cx,this.ax=1-this.cx-this.bx,this.cy=3*a,this.by=3*(c-a)-this.cy,this.ay=1-this.cy-this.by;const n=t=>this.sampleCurveY(this.solveCurveX(t));return Object.defineProperty(n,"name",{writable:!0}),n.name=r||`cubic-bezier(${[h,a,u,c]})`,n}sampleCurveX(t){return((this.ax*t+this.bx)*t+this.cx)*t}sampleCurveY(t){return((this.ay*t+this.by)*t+this.cy)*t}sampleCurveDerivativeX(t){return(3*this.ax*t+2*this.bx)*t+this.cx}solveCurveX(t){if(t<=0)return 0;if(t>=1)return 1;let e=t,s=0,i=0;for(let r=0;r<8;r+=1){if(s=this.sampleCurveX(e)-t,Math.abs(s)<1e-6)return e;if(i=this.sampleCurveDerivativeX(e),Math.abs(i)<1e-6)break;e-=s/i}let r=0,h=1;for(e=t;r<h;){if(s=this.sampleCurveX(e),Math.abs(s-t)<1e-6)return e;t>s?r=e:h=e,e=.5*(h-r)+r}return e}}Object.assign(t,{Version:"1.0.1"});export default t;
