// CubicBezier Easing v1.0.18 | thednp Â© 2021 | MIT-License
class t{constructor(t,e,s,i,r){this.cx=3*t,this.bx=3*(s-t)-this.cx,this.ax=1-this.cx-this.bx,this.cy=3*e,this.by=3*(i-e)-this.cy,this.ay=1-this.cy-this.by;const h=t=>this.sampleCurveY(this.solveCurveX(t));return Object.defineProperty(h,"name",{writable:!0}),h.name=r||`cubic-bezier(${[t,e,s,i]})`,h}sampleCurveX(t){return((this.ax*t+this.bx)*t+this.cx)*t}sampleCurveY(t){return((this.ay*t+this.by)*t+this.cy)*t}sampleCurveDerivativeX(t){return(3*this.ax*t+2*this.bx)*t+this.cx}solveCurveX(t){let e,s,i,r,h,a;for(i=t,a=0;a<32;a+=1){if(r=this.sampleCurveX(i)-t,Math.abs(r)<1e-5)return i;if(h=this.sampleCurveDerivativeX(i),Math.abs(h)<1e-5)break;i-=r/h}if(e=0,s=1,i=t,i<e)return e;if(i>s)return s;for(;e<s;){if(r=this.sampleCurveX(i),Math.abs(r-t)<1e-5)return i;t>r?e=i:s=i,i=.5*(s-e)+e}return i}}Object.assign(t,{Version:"1.0.18"});export default t;
